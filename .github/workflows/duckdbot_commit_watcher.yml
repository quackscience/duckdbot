name: Pull Remote Changes and Collect New Commits

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch:

jobs:
  fetch_new_commits:
    runs-on: ubuntu-latest

    env:
      REMOTE_REPO_URL: "https://github.com/duckdb/duckdb.git" # Remote repository URL
      BRANCH: "main"                                       # Branch to monitor
      COMMIT_LIMIT: 100                                    # Limit for the first run

    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4

      - name: Set up environment and state
        run: |
          mkdir -p state
          if [ ! -f state/last_commit.txt ]; then
            echo "null" > state/last_commit.txt
          fi

      - name: Clone remote repository
        run: |
          git clone --bare $REMOTE_REPO_URL remote-repo
          cd remote-repo
          git fetch origin

      - name: Fetch new commits with limits
        run: |
          cd remote-repo
          LAST_PROCESSED=$(cat ../state/last_commit.txt)
          if [ "$LAST_PROCESSED" = "null" ]; then
            # First run: limit to the most recent $COMMIT_LIMIT commits
            git log origin/$BRANCH -n $COMMIT_LIMIT --pretty=format:'{"commit":"%H","author":"%an","date":"%ad","message":"%s"},' > ../commits.json
          else
            # Fetch only new commits since the last processed commit
            git log $LAST_PROCESSED..origin/$BRANCH --pretty=format:'{"commit":"%H","author":"%an","date":"%ad","message":"%s"},' > ../commits.json
          fi
          echo "["$(cat ../commits.json)"]" | jq '.' > ../new_commits.json

      - name: Update last processed commit
        run: |
          cd remote-repo
          LATEST_COMMIT=$(git rev-parse origin/$BRANCH)
          echo "$LATEST_COMMIT" > ../state/last_commit.txt

      - name: Save state for next run
        uses: actions/upload-artifact@v3
        with:
          name: last-commit-state
          path: state/last_commit.txt

      - name: Output new commits as JSON
        id: output
        run: |
          echo "::set-output name=commits::$(cat new_commits.json)"

      - name: Display new commits
        run: echo "${{ steps.output.outputs.commits }}"
